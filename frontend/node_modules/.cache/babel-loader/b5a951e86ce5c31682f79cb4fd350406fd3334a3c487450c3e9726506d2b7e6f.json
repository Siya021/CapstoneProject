{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from \"axios\";\nexport default {\n  name: \"AdminTable\",\n  components: {},\n  data() {\n    return {\n      newUser: {\n        username: \"\",\n        email: \"\",\n        firstName: \"\",\n        lastName: \"\"\n      },\n      newProduct: {\n        prodName: \"\",\n        quantity: 0,\n        amount: 0,\n        Category: \"\",\n        prodUrl: \"\"\n      }\n    };\n  },\n  computed: {\n    users() {\n      return this.$store.state.users;\n    },\n    products() {\n      return this.$store.state.products;\n    }\n  },\n  mounted() {\n    this.$store.dispatch('fetchUsers');\n    this.$store.dispatch('fetchProducts');\n  },\n  methods: {\n    async addUser() {\n      try {\n        const response = await axios.post('https://full-stack-eomp1.onrender.com/register', this.newUser);\n        alert(response.data.msg); // Assuming the response has a 'msg' property\n        this.newUser = {\n          username: \"\",\n          email: \"\",\n          firstName: \"\",\n          lastName: \"\"\n        };\n        this.fetchUsers();\n      } catch (error) {\n        console.error(\"Error adding user:\", error);\n      }\n    },\n    async editUser(user) {\n      try {\n        // Check if user.userId is defined\n        if (user.userId === undefined) {\n          console.error(\"User ID is undefined\");\n          return; // Exit the function to prevent the request\n        }\n\n        const updatedData = {\n          username: this.newUser.username,\n          email: this.newUser.email,\n          firstName: this.newUser.firstName,\n          lastName: this.newUser.lastName\n        };\n        console.log('PATCH Request URL:', `\n        https://full-stack-eomp1.onrender.com/update-user/${user.userId}`);\n        console.log('PATCH Request Payload:', updatedData);\n        // Make the PATCH request only if user.userId is defined\n        await axios.patch(`https://full-stack-eomp1.onrender.com/update-user/${user.userId}`, updatedData);\n        this.fetchUsers();\n        alert('User updated successfully');\n      } catch (error) {\n        console.error(\"Error editing user:\", error);\n      }\n    },\n    async deleteUser(userId) {\n      const confirmed = confirm(\"Are you sure you want to delete this user?\");\n      if (confirmed) {\n        try {\n          await this.$store.dispatch(\"deleteUser\", userId);\n          console.log(\"User deleted successfully!\");\n        } catch (error) {\n          console.error(\"Error deleting user:\", error);\n          // Handle the error if needed\n        }\n      }\n\n      this.$router.push(\"/admin\");\n    },\n    async addProduct() {\n      try {\n        const response = await axios.post('https://full-stack-eomp1.onrender.com/add-products', this.newProduct);\n        alert(response.data.msg); // Assuming the response has a 'msg' property\n        this.newProduct = {\n          prodName: \"\",\n          quantity: 0,\n          amount: 0,\n          Category: \"\",\n          prodUrl: \"\"\n        };\n        // this.fetchProducts()\n      } catch (error) {\n        console.error(\"Error adding product:\", error);\n      }\n    },\n    async editProduct(product) {\n      try {\n        // Check if product.prodID is defined\n        if (product.prodID === undefined) {\n          console.error(\"Product ID is undefined\");\n          return; // Exit the function to prevent the request\n        }\n\n        const updatedData = {\n          prodName: this.newProduct.prodName,\n          quantity: this.newProduct.quantity,\n          amount: this.newProduct.amount,\n          Category: this.newProduct.Category,\n          prodUrl: this.newProduct.prodUrl\n        };\n        console.log('PATCH Request URL:', `https://full-stack-eomp1.onrender.com/products/updateProduct/${product.prodID}`);\n        console.log('PATCH Request Payload:', updatedData);\n        // Make the PATCH request only if product.prodID is defined\n        await axios.patch(`https://full-stack-eomp1.onrender.com/products/updateProduct/${product.prodID}`, updatedData);\n        this.fetchProducts();\n        alert('Product updated successfully');\n      } catch (error) {\n        console.error(\"Error editing product:\", error);\n      }\n    },\n    async deleteProduct(productId) {\n      const confirmed = confirm(\"Are you sure you want to delete this product?\");\n      if (confirmed) {\n        try {\n          await this.$store.dispatch(\"deleteProduct\", productId);\n          console.log(\"Product deleted successfully!\");\n        } catch (error) {\n          console.error(\"Error deleting product:\", error);\n          // Handle the error if needed\n        }\n      }\n\n      this.$router.push(\"/admin\");\n    },\n    resetForm() {\n      // Reset the form after a successful add\n      this.newUser.username = \"\";\n      this.newUser.email = \"\";\n      this.newUser.firstName = \"\";\n      this.newUser.lastName = \"\";\n    },\n    populateForm(user) {\n      this.newUser.username = user.username;\n      this.newUser.email = user.email;\n      this.newUser.firstName = user.firstName;\n      this.newUser.lastName = user.lastName;\n    }\n  }\n};","map":{"version":3,"names":["axios","name","components","data","newUser","username","email","firstName","lastName","newProduct","prodName","quantity","amount","Category","prodUrl","computed","users","$store","state","products","mounted","dispatch","methods","addUser","response","post","alert","msg","fetchUsers","error","console","editUser","user","userId","undefined","updatedData","log","patch","deleteUser","confirmed","confirm","$router","push","addProduct","editProduct","product","prodID","fetchProducts","deleteProduct","productId","resetForm","populateForm"],"sources":["C:\\Users\\Student\\Documents\\CAPSTONE\\CapstoneProject\\frontend\\src\\views\\AdminView.vue"],"sourcesContent":["<template>\r\n    <div>\r\n        <!-- Users Table -->\r\n        <div>\r\n            <form>\r\n                <h2>Add User</h2>\r\n                <input v-model=\"newUser.firstName\" placeholder=\"firstName\" />\r\n                <input v-model=\"newUser.lastName\" placeholder=\"lastName\" />\r\n                <input v-model=\"newUser.userAge\" placeholder=\"userAge\" />\r\n                <input v-model=\"newUser.Gender\" placeholder=\"Gender\" />\r\n                <input v-model=\"newUser.userRole\" placeholder=\"userRole\" />\r\n                <input v-model=\"newUser.emailAdd\" placeholder=\"emailAdd\" />\r\n                <input v-model=\"newUser.userPass\" placeholder=\"userPass\" />\r\n                <input v-model=\"newUser.userProfile\" placeholder=\"userProfile\" />\r\n                <button type=\"submit\">\r\n                    add user\r\n                </button>\r\n            </form>\r\n        </div>\r\n        <table class=\"w-100\">\r\n            <thead>\r\n                <tr>\r\n                    <th>Firstname</th>\r\n                    <th>Lastname</th>\r\n                    <th>Age</th>\r\n                    <th>Gender</th>\r\n                    <th>Role</th>\r\n                    <th>Email</th>\r\n                    <th>Profile</th>\r\n                    <th>Actions</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                <tr v-for=\"user in users\" :key=\"user.userID\">\r\n                    <td>{{ user.firstName }}</td>\r\n                    <td>{{ user.lastName }}</td>\r\n                    <td>{{ user.userAge }}</td>\r\n                    <td>{{ user.Gender }}</td>\r\n                    <td>{{ user.userRole }}</td>\r\n                    <td>{{ user.emailAdd }}</td>\r\n                    <td>\r\n                        <div class=\"card bg-transparent\">\r\n                            <img :src=\"user.userprofile\" class=\"mx-auto\" alt=\"...\">\r\n                        </div>\r\n                    </td>\r\n                    <td>\r\n                        <button>edit</button>\r\n                        <button @click=\"deleteUser(user.userID)\">delete</button>\r\n                    </td>\r\n                </tr>\r\n            </tbody>\r\n        </table>\r\n        <!-- Products Table -->\r\n        <div>\r\n            <h2>Add Product</h2>\r\n            <input v-model=\"newProduct.prodName\" placeholder=\"Product Name\" />\r\n            <input v-model=\"newProduct.Category\" placeholder=\"Brand\" />\r\n            <input v-model=\"newProduct.amount\" placeholder=\"Price\" type=\"number\" step=\"0.01\" />\r\n            <input v-model=\"newProduct.prodUrl\" placeholder=\"Product URL\" />\r\n            <button @click=\"addProduct\" onclick=\"window.location.reload()\">Add Product</button>\r\n        </div>\r\n        <table class=\"table\">\r\n            <thead>\r\n                <tr>\r\n                    <th>ID</th>\r\n                    <th>Product Name</th>\r\n                  <th>Brand</th>\r\n                    <th>Price</th>\r\n                    \r\n                    <th>Product URL</th>\r\n                    <th>Actions</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                <tr v-for=\"product in products\" :key=\"product.prodID\">\r\n                    <td>{{ product.prodID }}</td>\r\n                    <td>{{ product.prodName }}</td>\r\n                    <td>{{ product.quantity }}</td>\r\n                    <td>{{ product.amount }}</td>\r\n                    <td>{{ product.Category }}</td>\r\n                    <td><img :src=\"product.prodUrl\" alt=\"\"></td>\r\n                    <td>\r\n                        <button @click=\"editProduct(product)\">Edit</button>\r\n                        <button @click=\"deleteProduct(product.prodID)\" onclick=\"window.location.reload()\">Delete</button>\r\n                    </td>\r\n                </tr>\r\n            </tbody>\r\n        </table>\r\n    </div>\r\n</template>\r\n<script>\r\nimport axios from \"axios\";\r\nexport default {\r\n    name: \"AdminTable\",\r\n    components: { },\r\n    data() {\r\n        return {\r\n            newUser: {\r\n                username: \"\",\r\n                email: \"\",\r\n                firstName: \"\",\r\n                lastName: \"\",\r\n            },\r\n            newProduct: {\r\n                prodName: \"\",\r\n                quantity: 0,\r\n                amount: 0,\r\n                Category: \"\",\r\n                prodUrl: \"\",\r\n            },\r\n        };\r\n    },\r\n    computed: {\r\n        users() {\r\n            return this.$store.state.users;\r\n        },\r\n        products() {\r\n            return this.$store.state.products;\r\n        },\r\n    },\r\n    mounted() {\r\n        this.$store.dispatch('fetchUsers');\r\n        this.$store.dispatch('fetchProducts');\r\n    },\r\n    methods: {\r\n        async addUser() {\r\n            try {\r\n                const response = await axios.post('https://full-stack-eomp1.onrender.com/register', this.newUser);\r\n                alert(response.data.msg); // Assuming the response has a 'msg' property\r\n                this.newUser = {\r\n                    username: \"\",\r\n                    email: \"\",\r\n                    firstName: \"\",\r\n                    lastName: \"\",\r\n                };\r\n                this.fetchUsers();\r\n            } catch (error) {\r\n                console.error(\"Error adding user:\", error);\r\n            }\r\n        },\r\n        async editUser(user) {\r\n            try {\r\n                // Check if user.userId is defined\r\n                if (user.userId === undefined) {\r\n                    console.error(\"User ID is undefined\");\r\n                    return; // Exit the function to prevent the request\r\n                }\r\n                const updatedData = {\r\n                    username: this.newUser.username,\r\n                    email: this.newUser.email,\r\n                    firstName: this.newUser.firstName,\r\n                    lastName: this.newUser.lastName,\r\n                };\r\n                console.log('PATCH Request URL:', `\r\n        https://full-stack-eomp1.onrender.com/update-user/${user.userId}`);\r\n                console.log('PATCH Request Payload:', updatedData);\r\n                // Make the PATCH request only if user.userId is defined\r\n                await axios.patch(`https://full-stack-eomp1.onrender.com/update-user/${user.userId}`, updatedData);\r\n                this.fetchUsers();\r\n                alert('User updated successfully');\r\n            } catch (error) {\r\n                console.error(\"Error editing user:\", error);\r\n            }\r\n        },\r\n        async deleteUser(userId) {\r\n            const confirmed = confirm(\"Are you sure you want to delete this user?\");\r\n            if (confirmed) {\r\n                try {\r\n                    await this.$store.dispatch(\"deleteUser\", userId);\r\n                    console.log(\"User deleted successfully!\");\r\n                } catch (error) {\r\n                    console.error(\"Error deleting user:\", error);\r\n                    // Handle the error if needed\r\n                }\r\n            }\r\n            this.$router.push(\"/admin\");\r\n        },\r\n        async addProduct() {\r\n            try {\r\n                const response = await axios.post('https://full-stack-eomp1.onrender.com/add-products', this.newProduct);\r\n                alert(response.data.msg); // Assuming the response has a 'msg' property\r\n                this.newProduct = {\r\n                    prodName: \"\",\r\n                    quantity: 0,\r\n                    amount: 0,\r\n                    Category: \"\",\r\n                    prodUrl: \"\",\r\n                };\r\n                // this.fetchProducts()\r\n            } catch (error) {\r\n                console.error(\"Error adding product:\", error);\r\n            }\r\n        },\r\n        async editProduct(product) {\r\n            try {\r\n                // Check if product.prodID is defined\r\n                if (product.prodID === undefined) {\r\n                    console.error(\"Product ID is undefined\");\r\n                    return; // Exit the function to prevent the request\r\n                }\r\n                const updatedData = {\r\n                    prodName: this.newProduct.prodName,\r\n                    quantity: this.newProduct.quantity,\r\n                    amount: this.newProduct.amount,\r\n                    Category: this.newProduct.Category,\r\n                    prodUrl: this.newProduct.prodUrl,\r\n                };\r\n                console.log('PATCH Request URL:', `https://full-stack-eomp1.onrender.com/products/updateProduct/${product.prodID}`);\r\n                console.log('PATCH Request Payload:', updatedData);\r\n                // Make the PATCH request only if product.prodID is defined\r\n                await axios.patch(`https://full-stack-eomp1.onrender.com/products/updateProduct/${product.prodID}`, updatedData);\r\n                this.fetchProducts();\r\n                alert('Product updated successfully');\r\n            } catch (error) {\r\n                console.error(\"Error editing product:\", error);\r\n            }\r\n        },\r\n        async deleteProduct(productId) {\r\n            const confirmed = confirm(\"Are you sure you want to delete this product?\");\r\n            if (confirmed) {\r\n                try {\r\n                    await this.$store.dispatch(\"deleteProduct\", productId);\r\n                    console.log(\"Product deleted successfully!\");\r\n                } catch (error) {\r\n                    console.error(\"Error deleting product:\", error);\r\n                    // Handle the error if needed\r\n                }\r\n            }\r\n            this.$router.push(\"/admin\");\r\n        },\r\n        resetForm() {\r\n            // Reset the form after a successful add\r\n            this.newUser.username = \"\";\r\n            this.newUser.email = \"\";\r\n            this.newUser.firstName = \"\";\r\n            this.newUser.lastName = \"\";\r\n        },\r\n        populateForm(user) {\r\n            this.newUser.username = user.username;\r\n            this.newUser.email = user.email;\r\n            this.newUser.firstName = user.firstName;\r\n            this.newUser.lastName = user.lastName;\r\n        },\r\n    },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.admin {\r\n    background-image: url('https://i.postimg.cc/g2nbvTYz/dark-storage-with-shelves-many-forms-creating-different-shoes-boots.jpg');\r\n    background-repeat: no-repeat;\r\n    background-size: cover;\r\n    height: 950px;\r\n}\r\n\r\n.table {\r\n    width: 100%;\r\n    border-collapse: collapse;\r\n    margin-top: 20px;\r\n}\r\n\r\n.table th,\r\n.table td {\r\n    padding: 10px;\r\n    border: 1px solid #ddd;\r\n}\r\n\r\n/* Style for product images */\r\n.table img {\r\n    max-width: 100px;\r\n    height: auto;\r\n    display: block;\r\n    margin: 0 auto;\r\n}\r\n\r\n/* Style for buttons */\r\n.table button {\r\n    padding: 6px 12px;\r\n    background-color: #3490DC;\r\n    color: white;\r\n    border: none;\r\n    cursor: pointer;\r\n    border-radius: 4px;\r\n    transition: background-color 0.3s ease;\r\n}\r\n\r\n.table button:hover {\r\n    background-color: #2779BD;\r\n}\r\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}