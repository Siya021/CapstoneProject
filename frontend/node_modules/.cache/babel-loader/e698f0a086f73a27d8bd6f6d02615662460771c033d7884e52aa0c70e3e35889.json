{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { createStore } from 'vuex';\nimport axios from 'axios';\nconst url = \"https://capstone-zyve.onrender.com/\";\nexport default createStore({\n  state: {\n    Users: null,\n    User: null,\n    Products: null,\n    Product: null,\n    Orders: null,\n    Order: null,\n    msg: null,\n    spinner: null,\n    token: null\n  },\n  getters: {},\n  mutations: {\n    setUsers(state, Users) {\n      state.Users = Users;\n    },\n    setUser(state, User) {\n      state.User = User;\n    },\n    setProducts(state, Products) {\n      state.Products = Products;\n    },\n    setProduct(state, Product) {\n      state.Product = Product;\n    },\n    setOrders(state, Orders) {\n      state.Orders = Orders;\n    },\n    setOrder(state, Order) {\n      state.Order = Order;\n    },\n    setMsg(state, msg) {\n      state.msg = msg;\n    },\n    setSpinner(state, value) {\n      state.spinner = value;\n    },\n    setToken(state, token) {\n      state.token = token;\n    },\n    setSpinner(state, value) {\n      state.spinner = value;\n    },\n    setToken(state, token) {\n      state.token = token;\n    },\n    setmsg(state, msg) {\n      state.msg = msg;\n    },\n    addUser: (state, newUser) => {\n      state.Users.push(newUser);\n    },\n    deleteProduct: (state, prodID) => {\n      state.Products = state.Products.filter(Productoduct => Product.prodID !== prodID);\n    },\n    deleteUser: (state, userID) => {\n      state.Users = state.Users.filter(user => User.userID !== userID);\n    }\n  },\n  actions: {\n    async fetchUsers(context) {\n      try {\n        const {\n          data\n        } = await axios.get(`${url}users`);\n        context.commit(\"setUsers\", data.results);\n      } catch (e) {\n        context.commit(\"setMsg\", \"An error occured.\");\n      }\n    },\n    async addNewUser(context, newUser) {\n      try {\n        const response = await axios.post(`${fullStackEOMPUrl}register`, newUser);\n        if (response.status === 201) {\n          context.commit(\"addUser\", newUser);\n        }\n      } catch (error) {\n        console.error(\"Error adding new user:\", error);\n      }\n    },\n    async fetchProducts(context) {\n      try {\n        const {\n          data\n        } = await axios.get(`${fullStackEOMPUrl}products`);\n        context.commit(\"setProducts\", data.results);\n        console.log(data.results);\n      } catch (e) {\n        context.commit(\"setMsg\", \"An error occured.\");\n      }\n    },\n    async fetchProduct(context, prodID) {\n      try {\n        const {\n          data\n        } = await axios.get(`${fullStackEOMPUrl}products/${prodID}`);\n        context.commit(\"setProduct\", data.result[0]);\n        console.log(data.result);\n      } catch (e) {\n        context.commit(\"setMsg\", \"An error occurred.\");\n      }\n    },\n    async deleteProduct(context, prodID) {\n      try {\n        context.commit(\"setDeletionStatus\", null);\n        const response = await axios.delete(`${fullStackEOMPUrl}products/${prodID}`);\n        if (response.status !== 200) {\n          throw new Error(`Failed to delete product. Status: ${response.status}`);\n        }\n        context.commit(\"removeProduct\", prodID);\n        context.commit(\"setDeletionStatus\", \"success\");\n      } catch (error) {\n        console.error(\"Error deleting product:\", error);\n        context.commit(\"setDeletionStatus\", \"error\");\n      }\n    },\n    async editProduct(context, {\n      prodID,\n      updatedData\n    }) {\n      try {\n        const response = await axios.patch(`${fullStackEOMPUrl}products/${prodID}`, updatedData);\n        if (response.status !== 200) {\n          throw new Error(`Failed to update product. Status: ${response.status}`);\n        }\n        context.commit(\"updateProduct\", {\n          prodID,\n          updatedData\n        });\n        context.commit(\"setEditStatus\", \"success\");\n      } catch (error) {\n        console.error(\"Error editing product:\", error);\n        context.commit(\"setEditStatus\", \"error\");\n      }\n    }\n  },\n  modules: {}\n});","map":{"version":3,"names":["createStore","axios","url","state","Users","User","Products","Product","Orders","Order","msg","spinner","token","getters","mutations","setUsers","setUser","setProducts","setProduct","setOrders","setOrder","setMsg","setSpinner","value","setToken","setmsg","addUser","newUser","push","deleteProduct","prodID","filter","Productoduct","deleteUser","userID","user","actions","fetchUsers","context","data","get","commit","results","e","addNewUser","response","post","fullStackEOMPUrl","status","error","console","fetchProducts","log","fetchProduct","result","delete","Error","editProduct","updatedData","patch","modules"],"sources":["C:/Users/Student/Documents/CAPSTONE/CapstoneProject/frontend/src/store/index.js"],"sourcesContent":["import { createStore } from 'vuex'\r\nimport axios from 'axios'\r\n\r\nconst url= \"https://capstone-zyve.onrender.com/\"\r\nexport default createStore({\r\n  state: {\r\n    Users: null,\r\n    User: null,\r\n    Products: null,\r\n    Product: null,\r\n    Orders: null,\r\n    Order: null,\r\n    msg: null,\r\n    spinner: null,\r\n    token: null,\r\n  },\r\n  getters: {},\r\n  mutations: {\r\n    setUsers(state, Users) {\r\n      state.Users = Users;\r\n    },\r\n    setUser(state, User) {\r\n      state.User = User;\r\n    },\r\n    setProducts(state, Products) {\r\n      state.Products = Products;\r\n    },\r\n    setProduct(state, Product) {\r\n      state.Product = Product;\r\n    },\r\n    setOrders(state, Orders) {\r\n      state.Orders = Orders;\r\n    },\r\n    setOrder(state, Order) {\r\n      state.Order = Order;\r\n    },\r\n    setMsg(state, msg) {\r\n      state.msg = msg;\r\n    },\r\n    setSpinner(state, value) {\r\n      state.spinner = value;\r\n    },\r\n    setToken(state, token) {\r\n      state.token = token;\r\n    },\r\n    setSpinner(state, value) {\r\n      state.spinner = value;\r\n    },\r\n    setToken(state, token) {\r\n      state.token = token;\r\n    },\r\n    setmsg(state, msg) {\r\n      state.msg = msg;\r\n    },\r\n    addUser: (state, newUser) => {\r\n      state.Users.push(newUser);\r\n    },\r\n    deleteProduct: (state, prodID) => {\r\n      state.Products = state.Products.filter(\r\n        (Productoduct) => Product.prodID !== prodID\r\n      );\r\n    },\r\n    deleteUser: (state, userID) => {\r\n      state.Users = state.Users.filter((user) => User.userID !== userID);\r\n    },\r\n  },\r\n  actions: {\r\n    async fetchUsers(context) {\r\n      try {\r\n        const { data } = await axios.get(`${url}users`);\r\n        context.commit(\"setUsers\", data.results);\r\n      } catch (e) {\r\n        context.commit(\"setMsg\", \"An error occured.\");\r\n      }\r\n    },\r\n    async addNewUser(context, newUser) {\r\n      try {\r\n        const response = await axios.post(\r\n          `${fullStackEOMPUrl}register`,\r\n          newUser\r\n        );\r\n        if (response.status === 201) {\r\n          context.commit(\"addUser\", newUser);\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error adding new user:\", error);\r\n      }\r\n    },\r\n    async fetchProducts(context) {\r\n      try {\r\n        const { data } = await axios.get(`${fullStackEOMPUrl}products`);\r\n        context.commit(\"setProducts\", data.results);\r\n        console.log(data.results);\r\n      } catch (e) {\r\n        context.commit(\"setMsg\", \"An error occured.\");\r\n      }\r\n    },\r\n    async fetchProduct(context, prodID) {\r\n      try {\r\n        const { data } = await axios.get(\r\n          `${fullStackEOMPUrl}products/${prodID}`\r\n        );\r\n        context.commit(\"setProduct\", data.result[0]);\r\n        console.log(data.result);\r\n      } catch (e) {\r\n        context.commit(\"setMsg\", \"An error occurred.\");\r\n      }\r\n    },\r\n    async deleteProduct(context, prodID) {\r\n      try {\r\n        context.commit(\"setDeletionStatus\", null);\r\n        const response = await axios.delete(\r\n          `${fullStackEOMPUrl}products/${prodID}`\r\n        );\r\n        if (response.status !== 200) {\r\n          throw new Error(\r\n            `Failed to delete product. Status: ${response.status}`\r\n          );\r\n        }\r\n        context.commit(\"removeProduct\", prodID);\r\n        context.commit(\"setDeletionStatus\", \"success\");\r\n      } catch (error) {\r\n        console.error(\"Error deleting product:\", error);\r\n        context.commit(\"setDeletionStatus\", \"error\");\r\n      }\r\n    },\r\n    async editProduct(context, { prodID, updatedData }) {\r\n      try {\r\n        const response = await axios.patch(\r\n          `${fullStackEOMPUrl}products/${prodID}`,\r\n          updatedData\r\n        );\r\n        if (response.status !== 200) {\r\n          throw new Error(\r\n            `Failed to update product. Status: ${response.status}`\r\n          );\r\n        }\r\n        context.commit(\"updateProduct\", { prodID, updatedData });\r\n        context.commit(\"setEditStatus\", \"success\");\r\n      } catch (error) {\r\n        console.error(\"Error editing product:\", error);\r\n        context.commit(\"setEditStatus\", \"error\");\r\n      }\r\n    },\r\n  },\r\n  modules: {},\r\n});\r\n"],"mappings":";AAAA,SAASA,WAAW,QAAQ,MAAM;AAClC,OAAOC,KAAK,MAAM,OAAO;AAEzB,MAAMC,GAAG,GAAE,qCAAqC;AAChD,eAAeF,WAAW,CAAC;EACzBG,KAAK,EAAE;IACLC,KAAK,EAAE,IAAI;IACXC,IAAI,EAAE,IAAI;IACVC,QAAQ,EAAE,IAAI;IACdC,OAAO,EAAE,IAAI;IACbC,MAAM,EAAE,IAAI;IACZC,KAAK,EAAE,IAAI;IACXC,GAAG,EAAE,IAAI;IACTC,OAAO,EAAE,IAAI;IACbC,KAAK,EAAE;EACT,CAAC;EACDC,OAAO,EAAE,CAAC,CAAC;EACXC,SAAS,EAAE;IACTC,QAAQA,CAACZ,KAAK,EAAEC,KAAK,EAAE;MACrBD,KAAK,CAACC,KAAK,GAAGA,KAAK;IACrB,CAAC;IACDY,OAAOA,CAACb,KAAK,EAAEE,IAAI,EAAE;MACnBF,KAAK,CAACE,IAAI,GAAGA,IAAI;IACnB,CAAC;IACDY,WAAWA,CAACd,KAAK,EAAEG,QAAQ,EAAE;MAC3BH,KAAK,CAACG,QAAQ,GAAGA,QAAQ;IAC3B,CAAC;IACDY,UAAUA,CAACf,KAAK,EAAEI,OAAO,EAAE;MACzBJ,KAAK,CAACI,OAAO,GAAGA,OAAO;IACzB,CAAC;IACDY,SAASA,CAAChB,KAAK,EAAEK,MAAM,EAAE;MACvBL,KAAK,CAACK,MAAM,GAAGA,MAAM;IACvB,CAAC;IACDY,QAAQA,CAACjB,KAAK,EAAEM,KAAK,EAAE;MACrBN,KAAK,CAACM,KAAK,GAAGA,KAAK;IACrB,CAAC;IACDY,MAAMA,CAAClB,KAAK,EAAEO,GAAG,EAAE;MACjBP,KAAK,CAACO,GAAG,GAAGA,GAAG;IACjB,CAAC;IACDY,UAAUA,CAACnB,KAAK,EAAEoB,KAAK,EAAE;MACvBpB,KAAK,CAACQ,OAAO,GAAGY,KAAK;IACvB,CAAC;IACDC,QAAQA,CAACrB,KAAK,EAAES,KAAK,EAAE;MACrBT,KAAK,CAACS,KAAK,GAAGA,KAAK;IACrB,CAAC;IACDU,UAAUA,CAACnB,KAAK,EAAEoB,KAAK,EAAE;MACvBpB,KAAK,CAACQ,OAAO,GAAGY,KAAK;IACvB,CAAC;IACDC,QAAQA,CAACrB,KAAK,EAAES,KAAK,EAAE;MACrBT,KAAK,CAACS,KAAK,GAAGA,KAAK;IACrB,CAAC;IACDa,MAAMA,CAACtB,KAAK,EAAEO,GAAG,EAAE;MACjBP,KAAK,CAACO,GAAG,GAAGA,GAAG;IACjB,CAAC;IACDgB,OAAO,EAAEA,CAACvB,KAAK,EAAEwB,OAAO,KAAK;MAC3BxB,KAAK,CAACC,KAAK,CAACwB,IAAI,CAACD,OAAO,CAAC;IAC3B,CAAC;IACDE,aAAa,EAAEA,CAAC1B,KAAK,EAAE2B,MAAM,KAAK;MAChC3B,KAAK,CAACG,QAAQ,GAAGH,KAAK,CAACG,QAAQ,CAACyB,MAAM,CACnCC,YAAY,IAAKzB,OAAO,CAACuB,MAAM,KAAKA,MACvC,CAAC;IACH,CAAC;IACDG,UAAU,EAAEA,CAAC9B,KAAK,EAAE+B,MAAM,KAAK;MAC7B/B,KAAK,CAACC,KAAK,GAAGD,KAAK,CAACC,KAAK,CAAC2B,MAAM,CAAEI,IAAI,IAAK9B,IAAI,CAAC6B,MAAM,KAAKA,MAAM,CAAC;IACpE;EACF,CAAC;EACDE,OAAO,EAAE;IACP,MAAMC,UAAUA,CAACC,OAAO,EAAE;MACxB,IAAI;QACF,MAAM;UAAEC;QAAK,CAAC,GAAG,MAAMtC,KAAK,CAACuC,GAAG,CAAE,GAAEtC,GAAI,OAAM,CAAC;QAC/CoC,OAAO,CAACG,MAAM,CAAC,UAAU,EAAEF,IAAI,CAACG,OAAO,CAAC;MAC1C,CAAC,CAAC,OAAOC,CAAC,EAAE;QACVL,OAAO,CAACG,MAAM,CAAC,QAAQ,EAAE,mBAAmB,CAAC;MAC/C;IACF,CAAC;IACD,MAAMG,UAAUA,CAACN,OAAO,EAAEX,OAAO,EAAE;MACjC,IAAI;QACF,MAAMkB,QAAQ,GAAG,MAAM5C,KAAK,CAAC6C,IAAI,CAC9B,GAAEC,gBAAiB,UAAS,EAC7BpB,OACF,CAAC;QACD,IAAIkB,QAAQ,CAACG,MAAM,KAAK,GAAG,EAAE;UAC3BV,OAAO,CAACG,MAAM,CAAC,SAAS,EAAEd,OAAO,CAAC;QACpC;MACF,CAAC,CAAC,OAAOsB,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAChD;IACF,CAAC;IACD,MAAME,aAAaA,CAACb,OAAO,EAAE;MAC3B,IAAI;QACF,MAAM;UAAEC;QAAK,CAAC,GAAG,MAAMtC,KAAK,CAACuC,GAAG,CAAE,GAAEO,gBAAiB,UAAS,CAAC;QAC/DT,OAAO,CAACG,MAAM,CAAC,aAAa,EAAEF,IAAI,CAACG,OAAO,CAAC;QAC3CQ,OAAO,CAACE,GAAG,CAACb,IAAI,CAACG,OAAO,CAAC;MAC3B,CAAC,CAAC,OAAOC,CAAC,EAAE;QACVL,OAAO,CAACG,MAAM,CAAC,QAAQ,EAAE,mBAAmB,CAAC;MAC/C;IACF,CAAC;IACD,MAAMY,YAAYA,CAACf,OAAO,EAAER,MAAM,EAAE;MAClC,IAAI;QACF,MAAM;UAAES;QAAK,CAAC,GAAG,MAAMtC,KAAK,CAACuC,GAAG,CAC7B,GAAEO,gBAAiB,YAAWjB,MAAO,EACxC,CAAC;QACDQ,OAAO,CAACG,MAAM,CAAC,YAAY,EAAEF,IAAI,CAACe,MAAM,CAAC,CAAC,CAAC,CAAC;QAC5CJ,OAAO,CAACE,GAAG,CAACb,IAAI,CAACe,MAAM,CAAC;MAC1B,CAAC,CAAC,OAAOX,CAAC,EAAE;QACVL,OAAO,CAACG,MAAM,CAAC,QAAQ,EAAE,oBAAoB,CAAC;MAChD;IACF,CAAC;IACD,MAAMZ,aAAaA,CAACS,OAAO,EAAER,MAAM,EAAE;MACnC,IAAI;QACFQ,OAAO,CAACG,MAAM,CAAC,mBAAmB,EAAE,IAAI,CAAC;QACzC,MAAMI,QAAQ,GAAG,MAAM5C,KAAK,CAACsD,MAAM,CAChC,GAAER,gBAAiB,YAAWjB,MAAO,EACxC,CAAC;QACD,IAAIe,QAAQ,CAACG,MAAM,KAAK,GAAG,EAAE;UAC3B,MAAM,IAAIQ,KAAK,CACZ,qCAAoCX,QAAQ,CAACG,MAAO,EACvD,CAAC;QACH;QACAV,OAAO,CAACG,MAAM,CAAC,eAAe,EAAEX,MAAM,CAAC;QACvCQ,OAAO,CAACG,MAAM,CAAC,mBAAmB,EAAE,SAAS,CAAC;MAChD,CAAC,CAAC,OAAOQ,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;QAC/CX,OAAO,CAACG,MAAM,CAAC,mBAAmB,EAAE,OAAO,CAAC;MAC9C;IACF,CAAC;IACD,MAAMgB,WAAWA,CAACnB,OAAO,EAAE;MAAER,MAAM;MAAE4B;IAAY,CAAC,EAAE;MAClD,IAAI;QACF,MAAMb,QAAQ,GAAG,MAAM5C,KAAK,CAAC0D,KAAK,CAC/B,GAAEZ,gBAAiB,YAAWjB,MAAO,EAAC,EACvC4B,WACF,CAAC;QACD,IAAIb,QAAQ,CAACG,MAAM,KAAK,GAAG,EAAE;UAC3B,MAAM,IAAIQ,KAAK,CACZ,qCAAoCX,QAAQ,CAACG,MAAO,EACvD,CAAC;QACH;QACAV,OAAO,CAACG,MAAM,CAAC,eAAe,EAAE;UAAEX,MAAM;UAAE4B;QAAY,CAAC,CAAC;QACxDpB,OAAO,CAACG,MAAM,CAAC,eAAe,EAAE,SAAS,CAAC;MAC5C,CAAC,CAAC,OAAOQ,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;QAC9CX,OAAO,CAACG,MAAM,CAAC,eAAe,EAAE,OAAO,CAAC;MAC1C;IACF;EACF,CAAC;EACDmB,OAAO,EAAE,CAAC;AACZ,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}