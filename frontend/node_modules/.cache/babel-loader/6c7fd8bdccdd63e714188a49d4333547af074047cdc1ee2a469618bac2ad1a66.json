{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from \"axios\";\nexport default {\n  name: \"AdminTable\",\n  components: {},\n  data() {\n    return {\n      newUser: {\n        firstName: \"\",\n        lastName: \"\",\n        email: \"\",\n        userPass: \"\"\n      },\n      newProduct: {\n        prodName: \"\",\n        brand: \"\",\n        price: \"\",\n        prodUrl: \"\"\n      }\n    };\n  },\n  computed: {\n    users() {\n      return this.$store.state.Users;\n    },\n    products() {\n      return this.$store.state.Products;\n    }\n  },\n  mounted() {\n    this.$store.dispatch('fetchUsers');\n    this.$store.dispatch('fetchProducts');\n  },\n  methods: {\n    async addUser() {\n      try {\n        const response = await axios.post('https://capstone-zyve.onrender.com/', this.newUser);\n        alert(response.data.msg); // Assuming the response has a 'msg' property\n        this.newUser = {\n          username: \"\",\n          email: \"\",\n          firstName: \"\",\n          lastName: \"\"\n        };\n        this.fetchUsers();\n      } catch (error) {\n        console.error(\"Error adding user:\", error);\n      }\n    },\n    async editUser(user) {\n      try {\n        // Check if user.userId is defined\n        if (user.userId === undefined) {\n          console.error(\"User ID is undefined\");\n          return; // Exit the function to prevent the request\n        }\n\n        const updatedData = {\n          username: this.newUser.username,\n          email: this.newUser.email,\n          firstName: this.newUser.firstName,\n          lastName: this.newUser.lastName\n        };\n        console.log('PATCH Request URL:', `\n       https://capstone-zyve.onrender.com/${user.userId}`);\n        console.log('PATCH Request Payload:', updatedData);\n        // Make the PATCH request only if user.userId is defined\n        await axios.patch(`https://capstone-zyve.onrender.com/update-user/${user.userId}`, updatedData);\n        this.fetchUsers();\n        alert('User updated successfully');\n      } catch (error) {\n        console.error(\"Error editing user:\", error);\n      }\n    },\n    async deleteUser(userID) {\n      const confirmed = confirm(\"Are you sure you want to delete this user?\");\n      if (confirmed) {\n        try {\n          await this.$store.dispatch(\"deleteUser\", userID);\n          console.log(\"User deleted successfully!\");\n        } catch (error) {\n          console.error(\"Error deleting user:\", error);\n          // Handle the error if needed\n        }\n      }\n\n      this.$router.push(\"/admin\");\n    },\n    async addProduct() {\n      try {\n        const response = await axios.post('https://capstone-zyve.onrender.com/', this.newProduct);\n        alert(response.data.msg); // Assuming the response has a 'msg' property\n        this.newProduct = {\n          prodName: \"\",\n          quantity: 0,\n          amount: 0,\n          Category: \"\",\n          prodUrl: \"\"\n        };\n        // this.fetchProducts()\n      } catch (error) {\n        console.error(\"Error adding product:\", error);\n      }\n    },\n    async editProduct(product) {\n      try {\n        // Check if product.prodID is defined\n        if (product.prodID === undefined) {\n          console.error(\"Product ID is undefined\");\n          return; // Exit the function to prevent the request\n        }\n\n        const updatedData = {\n          prodName: this.newProduct.prodName,\n          quantity: this.newProduct.quantity,\n          amount: this.newProduct.amount,\n          Category: this.newProduct.Category,\n          prodUrl: this.newProduct.prodUrl\n        };\n        console.log('PATCH Request URL:', `https://capstone-zyve.onrender.com/products/updateProduct/${product.prodID}`);\n        console.log('PATCH Request Payload:', updatedData);\n        // Make the PATCH request only if product.prodID is defined\n        await axios.patch(`https://capstone-zyve.onrender.com/products/updateProduct/${product.prodID}`, updatedData);\n        this.fetchProducts();\n        alert('Product updated successfully');\n      } catch (error) {\n        console.error(\"Error editing product:\", error);\n      }\n    },\n    async deleteProduct(prodID) {\n      const confirmed = confirm(\"Are you sure you want to delete this product?\");\n      if (confirmed) {\n        try {\n          await this.$store.dispatch(\"deleteProduct\", prodID);\n          console.log(\"Product deleted successfully!\");\n        } catch (error) {\n          console.error(\"Error deleting product:\", error);\n          // Handle the error if needed\n        }\n      }\n\n      this.$router.push(\"/admin\");\n    },\n    resetForm() {\n      // Reset the form after a successful add\n      this.newUser.username = \"\";\n      this.newUser.email = \"\";\n      this.newUser.firstName = \"\";\n      this.newUser.lastName = \"\";\n    },\n    populateForm(user) {\n      this.newUser.username = user.username;\n      this.newUser.email = user.email;\n      this.newUser.firstName = user.firstName;\n      this.newUser.lastName = user.lastName;\n    }\n  }\n};","map":{"version":3,"names":["axios","name","components","data","newUser","firstName","lastName","email","userPass","newProduct","prodName","brand","price","prodUrl","computed","users","$store","state","Users","products","Products","mounted","dispatch","methods","addUser","response","post","alert","msg","username","fetchUsers","error","console","editUser","user","userId","undefined","updatedData","log","patch","deleteUser","userID","confirmed","confirm","$router","push","addProduct","quantity","amount","Category","editProduct","product","prodID","fetchProducts","deleteProduct","resetForm","populateForm"],"sources":["C:\\Users\\Student\\Documents\\CAPSTONE\\CapstoneProject\\frontend\\src\\views\\AdminView.vue"],"sourcesContent":["<template>\r\n    <div class=\"admin\">\r\n        <!-- Users Table -->\r\n        <div>\r\n            <form>\r\n                <h2>Add User</h2>\r\n                <input v-model=\"newUser.firstName\" placeholder=\"firstName\" />\r\n                <input v-model=\"newUser.lastName\" placeholder=\"lastName\" />\r\n                <input v-model=\"newUser.userAge\" placeholder=\"userAge\" />\r\n                <input v-model=\"newUser.Gender\" placeholder=\"Gender\" />\r\n                <input v-model=\"newUser.userRole\" placeholder=\"userRole\" />\r\n                <input v-model=\"newUser.emailAdd\" placeholder=\"emailAdd\" />\r\n                <input v-model=\"newUser.userPass\" placeholder=\"userPass\" />\r\n                <input v-model=\"newUser.userProfile\" placeholder=\"userProfile\" />\r\n                <button type=\"submit\">\r\n                    add user\r\n                </button>\r\n            </form>\r\n        </div>\r\n        <div class=\"container-fluid\">\r\n            <div class=\"row\">\r\n                <div class=\"col\" v-for=\"User in Users\" :key=\"User.userID\">\r\n                    <div class=\"card mb-3\" style=\"max-width: 540px;\">\r\n                        <div class=\"row g-0\">\r\n                            <div class=\"col-md-4\">\r\n                                <img :src= Users.user class=\"img-fluid rounded-start\" alt=\"...\">\r\n                            </div>\r\n                            <div class=\"col-md-8\">\r\n                                <div class=\"card-body\">\r\n                                    <h5 class=\"card-title\">Card title</h5>\r\n                                    <p class=\"card-text\">This is a wider card with supporting text below as a natural\r\n                                        lead-in to additional content. This content is a little bit longer.</p>\r\n                                    <p class=\"card-text\"><small class=\"text-body-secondary\">Last updated 3 mins ago</small>\r\n                                    </p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <!-- Products Table -->\r\n        <div>\r\n            <h2>Add Product</h2>\r\n            <input v-model=\"newProduct.prodName\" placeholder=\"Product Name\" />\r\n            <input v-model=\"newProduct.Category\" placeholder=\"Brand\" />\r\n            <input v-model=\"newProduct.amount\" placeholder=\"Price\" type=\"number\" step=\"0.01\" />\r\n            <input v-model=\"newProduct.prodUrl\" placeholder=\"Product URL\" />\r\n            <button @click=\"addProduct\" onclick=\"window.location.reload()\">Add Product</button>\r\n        </div>\r\n        <table class=\"table\">\r\n            <thead>\r\n                <tr>\r\n                    <th>ID</th>\r\n                    <th>Product Name</th>\r\n                    <th>Brand</th>\r\n                    <th>Price</th>\r\n                    <th>Product URL</th>\r\n                    <th>Actions</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                <tr v-for=\"Product in Products\" :key=\"Product.prodID\">\r\n                    <td>{{ Product.prodID }}</td>\r\n                    <td>{{ Product.prodName }}</td>\r\n                    <td>{{ Product.Brand }}</td>\r\n                    <td>{{ Product.price }}</td>\r\n                    <td><img :src=\"Product.prodUrl\" alt=\"\"></td>\r\n                    <td>\r\n                        <button @click=\"editProduct(Product)\">Edit</button>\r\n                        <button @click=\"deleteProduct(Product.prodID)\" onclick=\"window.location.reload()\">Delete</button>\r\n                    </td>\r\n                </tr>\r\n            </tbody>\r\n        </table>\r\n    </div>\r\n</template>\r\n<script>\r\nimport axios from \"axios\";\r\nexport default {\r\n    name: \"AdminTable\",\r\n    components: {},\r\n    data() {\r\n        return {\r\n            newUser: {\r\n                firstName: \"\",\r\n                lastName: \"\",\r\n                email: \"\",\r\n                userPass: \"\",\r\n\r\n            },\r\n            newProduct: {\r\n                prodName: \"\",\r\n                brand: \"\",\r\n                price: \"\",\r\n                prodUrl: \"\",\r\n            },\r\n        };\r\n    },\r\n    computed: {\r\n        users() {\r\n            return this.$store.state.Users;\r\n        },\r\n        products() {\r\n            return this.$store.state.Products;\r\n        },\r\n    },\r\n    mounted() {\r\n        this.$store.dispatch('fetchUsers');\r\n        this.$store.dispatch('fetchProducts');\r\n    },\r\n    methods: {\r\n        async addUser() {\r\n            try {\r\n                const response = await axios.post('https://capstone-zyve.onrender.com/', this.newUser);\r\n                alert(response.data.msg); // Assuming the response has a 'msg' property\r\n                this.newUser = {\r\n                    username: \"\",\r\n                    email: \"\",\r\n                    firstName: \"\",\r\n                    lastName: \"\",\r\n                };\r\n                this.fetchUsers();\r\n            } catch (error) {\r\n                console.error(\"Error adding user:\", error);\r\n            }\r\n        },\r\n        async editUser(user) {\r\n            try {\r\n                // Check if user.userId is defined\r\n                if (user.userId === undefined) {\r\n                    console.error(\"User ID is undefined\");\r\n                    return; // Exit the function to prevent the request\r\n                }\r\n                const updatedData = {\r\n                    username: this.newUser.username,\r\n                    email: this.newUser.email,\r\n                    firstName: this.newUser.firstName,\r\n                    lastName: this.newUser.lastName,\r\n                };\r\n                console.log('PATCH Request URL:', `\r\n       https://capstone-zyve.onrender.com/${user.userId}`);\r\n                console.log('PATCH Request Payload:', updatedData);\r\n                // Make the PATCH request only if user.userId is defined\r\n                await axios.patch(`https://capstone-zyve.onrender.com/update-user/${user.userId}`, updatedData);\r\n                this.fetchUsers();\r\n                alert('User updated successfully');\r\n            } catch (error) {\r\n                console.error(\"Error editing user:\", error);\r\n            }\r\n        },\r\n        async deleteUser(userID) {\r\n            const confirmed = confirm(\"Are you sure you want to delete this user?\");\r\n            if (confirmed) {\r\n                try {\r\n                    await this.$store.dispatch(\"deleteUser\", userID);\r\n                    console.log(\"User deleted successfully!\");\r\n                } catch (error) {\r\n                    console.error(\"Error deleting user:\", error);\r\n                    // Handle the error if needed\r\n                }\r\n            }\r\n            this.$router.push(\"/admin\");\r\n        },\r\n        async addProduct() {\r\n            try {\r\n                const response = await axios.post('https://capstone-zyve.onrender.com/', this.newProduct);\r\n                alert(response.data.msg); // Assuming the response has a 'msg' property\r\n                this.newProduct = {\r\n                    prodName: \"\",\r\n                    quantity: 0,\r\n                    amount: 0,\r\n                    Category: \"\",\r\n                    prodUrl: \"\",\r\n                };\r\n                // this.fetchProducts()\r\n            } catch (error) {\r\n                console.error(\"Error adding product:\", error);\r\n            }\r\n        },\r\n        async editProduct(product) {\r\n            try {\r\n                // Check if product.prodID is defined\r\n                if (product.prodID === undefined) {\r\n                    console.error(\"Product ID is undefined\");\r\n                    return; // Exit the function to prevent the request\r\n                }\r\n                const updatedData = {\r\n                    prodName: this.newProduct.prodName,\r\n                    quantity: this.newProduct.quantity,\r\n                    amount: this.newProduct.amount,\r\n                    Category: this.newProduct.Category,\r\n                    prodUrl: this.newProduct.prodUrl,\r\n                };\r\n                console.log('PATCH Request URL:', `https://capstone-zyve.onrender.com/products/updateProduct/${product.prodID}`);\r\n                console.log('PATCH Request Payload:', updatedData);\r\n                // Make the PATCH request only if product.prodID is defined\r\n                await axios.patch(`https://capstone-zyve.onrender.com/products/updateProduct/${product.prodID}`, updatedData);\r\n                this.fetchProducts();\r\n                alert('Product updated successfully');\r\n            } catch (error) {\r\n                console.error(\"Error editing product:\", error);\r\n            }\r\n        },\r\n        async deleteProduct(prodID) {\r\n            const confirmed = confirm(\"Are you sure you want to delete this product?\");\r\n            if (confirmed) {\r\n                try {\r\n                    await this.$store.dispatch(\"deleteProduct\", prodID);\r\n                    console.log(\"Product deleted successfully!\");\r\n                } catch (error) {\r\n                    console.error(\"Error deleting product:\", error);\r\n                    // Handle the error if needed\r\n                }\r\n            }\r\n            this.$router.push(\"/admin\");\r\n        },\r\n        resetForm() {\r\n            // Reset the form after a successful add\r\n            this.newUser.username = \"\";\r\n            this.newUser.email = \"\";\r\n            this.newUser.firstName = \"\";\r\n            this.newUser.lastName = \"\";\r\n        },\r\n        populateForm(user) {\r\n            this.newUser.username = user.username;\r\n            this.newUser.email = user.email;\r\n            this.newUser.firstName = user.firstName;\r\n            this.newUser.lastName = user.lastName;\r\n        },\r\n    },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.container-fluid {\r\n    border: red solid 3px;\r\n}\r\n\r\n.admin {\r\n    color: white;\r\n}\r\n\r\n.table {\r\n    width: 100%;\r\n    border-collapse: collapse;\r\n    margin-top: 20px;\r\n}\r\n\r\n.table th,\r\n.table td {\r\n    padding: 10px;\r\n    border: 1px solid #ddd;\r\n}\r\n\r\n/* Style for product images */\r\n.table img {\r\n    max-width: 100px;\r\n    height: auto;\r\n    display: block;\r\n    margin: 0 auto;\r\n}\r\n\r\n/* Style for buttons */\r\n.table button {\r\n    padding: 6px 12px;\r\n    background-color: #3490DC;\r\n    color: white;\r\n    border: none;\r\n    cursor: pointer;\r\n    border-radius: 4px;\r\n    transition: background-color 0.3s ease;\r\n}\r\n\r\n.table button:hover {\r\n    background-color: #2779BD;\r\n}</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}